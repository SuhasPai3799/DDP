Logic Ontology logic (Hans-Ulrich Krieger)

The logic ontology (version 0.9.0) consists of a polarity hierarchy
and the class Proposition that can be used to reify binary propositions
which includes a polarity value and transaction time, i.e., to reify
quintuples of the following form:

    polarity subject predicate object transtime.

The polarity hierarchy consists of four classes, organized in a perfect
diamond:

      DontKnow
       /     \
    True    False
       \     /
        Error

The polarity classes come with corresponding singleton instances

    logic:dontknow
    logic:true
    logic:false
    logic:error

which have already been introduced with the intention to use them solely
in order to save space.

We can use True and False to designate that a proposition at a specific
time is definitely true or false, resp.
The class Error should be employed to indicate that a proposition is
logically inconsistent.

For instance, the following is a valid inference for every instantiation
of the the rule variables:

    true ?s ?p ?o ?t
    false ?s ?p ?o ?t
    -----------------
    error ?s ?p ?o ?t

Version 0.9.1 add durther polarity values in between, such as "confirmed",
"likely", "fifty-fifty", "perhaps", or "excluded", together whit low and
high values for the confidence intervals of the singleton instances of
each such class.
