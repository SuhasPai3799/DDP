/************************* TODO in rudimant project ******************************/

- public class ... immer automatisch erstellen
-> extend xy erkennen und an public class ... dranhängen können
- if mit 'x ? y : z' in Syntax aufnehmen!!!!!

- für Variablendeklaration: sollte rudimant sowas wie static und final vertragen können?
- wollen wir vielleicht doch, dass rudimant nicht über new stolpert? Kommt zB vor in
    - start_quiz, stop_quiz, end_quiz, close_session,
    - request_next_question, robot_answers, init_quiz
- rudimant akzeptiert kein implizites Timeout im propose() (vgl. close_session) -> einbauen?
- Problem für process_incoming_speechacts: rudimant kann kein Casten und kein instanceof! Beides wird auch noch in anderen Regeln benutzt!

/************************* TODO in NaoAgent.rudi ******************************/

- mit //! markierte Fragen lösen (teilweise überlappend mit den Punkten oben)
- lastOccurenceOfMyDA("Request", slot) : soll hier auch ein #Request stehen? Mit welchen Argumenten?
- einige DAs sind noch klein geschrieben, habe das so gelassen weil der String in NaoAgent.java klein war - das sollte aber wahrscheinlich noch geändert werden

BK: aus NaoAgent.rudi:
// TODO: Übergeben von #ReturnGoodbye als String wird nicht funktionieren,
// gibt es hier eine andere Möglichkeit als das Ganze in drei Emits
// aufzuteilen?

BK:
   Wie ich das sehe, brauchen wir so was wie makroexpansion. Es kommt einfach
   zu oft vor, das sachen extrem ähnlich behandelt werden sollen und man
   template + argument hat
